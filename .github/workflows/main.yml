name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Use Pre-installed Python
      run: python --version
    
    - name: Debug - List directory contents
      run: |
        echo "Listing root directory contents:"
        ls -la
        echo "Listing backend directory contents:"
        ls -la backend
    
    - name: Set PATH for ffmpeg
      run: echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV
      
    # - name: Check FFMPEG
    #   run: which ffmpeg && ffmpeg -version
    
    - name: Install FFMPEG 
      run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
    
    - name: Check FFMPEG after install
      run: which ffmpeg && ffmpeg -version

    - name: Install system dependencies for Pillow
      run: sudo apt-get update && sudo apt-get install -y libjpeg-dev zlib1g-dev
    
    - name: Install Tesseract
      run: sudo apt-get update && sudo apt-get install -y tesseract-ocr

    - name: Install dependencies
      run: |
        echo "Setting up virtual environment and installing dependencies..."
        python -m venv venv  
        source venv/bin/activate 
        pip install -r backend/requirements.txt  

    - name: Run tests
      run: |
        source venv/bin/activate  
        pytest tests/backend/ --maxfail=3 --tb=short > pytest-output.log
    
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: pytest-output.log

  test-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
            node-version: '18'
      
      - name: Install Playwright
        run: npx playwright install chromium
      - name: Install system dependencies for Pillow
        run: sudo apt-get update && sudo apt-get install -y libjpeg-dev zlib1g-dev
      - name: Install Tesseract
        run: sudo apt-get update && sudo apt-get install -y tesseract-ocr

      - name: Install dependencies
        run: |
          echo "Setting up virtual environment and installing dependencies..."
          python -m venv venv  
          source venv/bin/activate 
          pip install -r backend/requirements.txt  
      - name: Start Flask backend
        run: |
          source venv/bin/activate  
          python -m backend.flask_api.run &
          sleep 5  # Wait for Flask to start

      - name: Add test data to database
        run: |
          source venv/bin/activate
          python -c 'from your_app import create_app, models; from datetime import datetime; app = create_app(); with app.app_context(): meeting = models.Meetings(title="Test Meeting for Cypress", scheduled_time=datetime.now(), platform="Test Platform");transcription = models.Transcriptions(meeting_id=meeting.meeting_id, full_text="Test transcription for Cypress", summary="Test summary for Cypress"); models.db.session.add(meeting);models.db.session.add(transcription);models.db.session.commit()'
      
      - name: Run Playwright tests
        run: npx playwright test tests/extension/extension.spec.js